AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS resources for MedFoyer backend
Parameters: 
        EnvType: 
                Description: Environment type.
                Default: sandbox
                Type: String
                AllowedValues: 
                        - prod
                        - dev
                        - sandbox
                ConstraintDescription: must specify valid stage [prod|dev|sandbox].
Resources:
        PatientApi:
                Type: AWS::Serverless::Api
                Properties:
                        StageName: !Ref EnvType
                        Cors:
                                AllowMethods: "'POST, GET, OPTIONS'"
                                AllowHeaders: "'X-Forwarded-For'"
                                AllowOrigin: "'*'"
                                AllowCredentials: False
        GetAppointment:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-get-appointment"
                        Handler: handlers/appointment.handler
                        Runtime: python3.8
                        CodeUri: ./
        CheckInAppointment:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-check-in-appointment"
                        Policies: AmazonDynamoDBFullAccess
                        Handler: handlers/appointment.check_in_handler
                        Runtime: python3.8
                        CodeUri: ./
                        Events:
                                CheckInAppointmentApi:
                                        Type: Api
                                        Properties:
                                                RestApiId: !Ref PatientApi
                                                Path: /CheckInAppointment
                                                Method: POST
        SubmitAppointmentForm:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-submit-appointment-form"
                        Policies:
                                - AmazonDynamoDBFullAccess
                                - AmazonS3FullAccess
                        Handler: handlers/appointment.submit_form_handler
                        Runtime: python3.8
                        CodeUri: ./
                        Events:
                                SubmitAppointmentApi:
                                        Type: Api
                                        Properties:
                                                RestApiId: !Ref PatientApi
                                                Path: /SubmitAppointmentForm
                                                Method: POST
        GetForms:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-get-forms"
                        Policies:
                                - AmazonS3FullAccess
                        Handler: handlers/appointment.get_forms_handler
                        Runtime: python3.8
                        CodeUri: ./
        SummonPatient:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-summon-patient-appointment"
                        Policies:
                                - AmazonDynamoDBFullAccess
                        Handler: handlers/appointment.summon_patient_handler
                        Runtime: python3.8
                        CodeUri: ./
        GetWaitlistPriority:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-get-waitlist-position"
                        Policies:
                                - AmazonDynamoDBFullAccess
                        Handler: handlers/appointment.get_waitlist_position_handler
                        Runtime: python3.8
                        CodeUri: ./
                        Events:
                                GetWaitlistPriorityApi:
                                        Type: Api
                                        Properties:
                                                RestApiId: !Ref PatientApi
                                                Path: /Waitlist
                                                Method: GET
        AddUserClaims:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-add-user-claims"
                        Handler: handlers/auth.claim_add_handler
                        Runtime: python3.8
                        CodeUri: ./
        SendAppointmentReminders:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-send-appointment-reminders"
                        Policies:
                                - AmazonDynamoDBFullAccess
                                - AmazonSSMReadOnlyAccess
                        Handler: handlers/appointment.send_appointment_reminders_handler
                        Runtime: python3.8
                        CodeUri: ./
        AuthAppointment:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-auth-appointment-handler"
                        Policies:
                                - AmazonDynamoDBFullAccess
                                - AmazonSSMReadOnlyAccess
                        Handler: handlers/auth.auth_appointment_handler
                        Runtime: python3.8
                        CodeUri: ./
                        Events:
                                AuthAppointmentApi:
                                        Type: Api
                                        Properties:
                                                RestApiId: !Ref PatientApi
                                                Path: /AuthAppointment
                                                Method: POST
        GetClinicLatLong:
                Type: AWS::Serverless::Function
                Properties:
                        FunctionName: !Sub "${EnvType}-get-clinic-lat-long-handler"
                        Policies:
                                - AmazonDynamoDBFullAccess
                                - AmazonSSMReadOnlyAccess
                        Handler: handlers/appointment.get_clinic_lat_long_handler
                        Runtime: python3.8
                        CodeUri: ./
                        Events:
                                GetClinicLatLongApi:
                                        Type: Api
                                        Properties:
                                                RestApiId: !Ref PatientApi
                                                Path: /ClincLocation
                                                Method: GET



